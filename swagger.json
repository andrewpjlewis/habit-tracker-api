{
  "swagger": "2.0",
  "info": {
    "title": "Habit Tracker API",
    "description": "API for user authentication and habit tracking",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication routes"
    },
    {
      "name": "Habits",
      "description": "Habit management"
    },
    {
      "name": "Logs",
      "description": "Habit logging"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log in a user",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/auth/all": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get all users",
        "description": "",
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/user/{id}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get a user by an id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User by id",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/id/{id}": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete a user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/habits/": {
      "post": {
        "tags": [
          "Habits"
        ],
        "summary": "Create a new habit",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Drink water"
                },
                "description": {
                  "type": "string",
                  "example": "Drink 8 cups of water"
                },
                "frequency": {
                  "type": "string",
                  "example": "Daily"
                },
                "userId": {
                  "type": "string",
                  "example": "user123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Habit created successfully"
          },
          "500": {
            "description": "Failed to create habit"
          }
        }
      }
    },
    "/api/habits/all": {
      "get": {
        "tags": [
          "Habits"
        ],
        "summary": "Get all habits (optionally filtered by userId)",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter habits by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of habits"
          },
          "500": {
            "description": "Failed to fetch habits"
          }
        }
      }
    },
    "/api/habits/{id}": {
      "get": {
        "tags": [
          "Habits"
        ],
        "summary": "Get a single habit by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Habit ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A habit object"
          },
          "404": {
            "description": "Habit not found"
          },
          "500": {
            "description": "Failed to fetch habit"
          }
        }
      },
      "put": {
        "tags": [
          "Habits"
        ],
        "summary": "Update a habit by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Habit ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Updated Title"
                },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                },
                "frequency": {
                  "type": "string",
                  "example": "weekly"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Habit updated successfully"
          },
          "404": {
            "description": "Habit not found"
          },
          "500": {
            "description": "Failed to update habit"
          }
        }
      },
      "delete": {
        "tags": [
          "Habits"
        ],
        "summary": "Delete a habit by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Habit ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Habit deleted successfully"
          },
          "404": {
            "description": "Habit not found"
          },
          "500": {
            "description": "Failed to delete habit"
          }
        }
      }
    },
    "/api/logs/": {
      "post": {
        "tags": [
          "Logs"
        ],
        "summary": "Create a new log entry for a habit",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "habitId": {
                  "type": "string",
                  "example": "60f7f1a2c9e1f829b8a2f9a4"
                },
                "date": {
                  "type": "string",
                  "example": "2025-05-22T00:00:00.000Z"
                },
                "notes": {
                  "type": "string",
                  "example": "Felt great after completing the habit!"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Log created successfully"
          },
          "500": {
            "description": "Failed to create log"
          }
        }
      }
    },
    "/api/logs/habit/{habitId}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get all logs for a specific habit",
        "description": "",
        "parameters": [
          {
            "name": "habitId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the habit to fetch logs for"
          }
        ],
        "responses": {
          "200": {
            "description": "List of logs for the habit"
          },
          "500": {
            "description": "Failed to fetch logs"
          }
        }
      }
    },
    "/api/logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get a single log entry by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the log entry"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested log entry"
          },
          "404": {
            "description": "Log not found"
          },
          "500": {
            "description": "Failed to fetch log"
          }
        }
      },
      "put": {
        "tags": [
          "Logs"
        ],
        "summary": "Update a log entry by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the log entry to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "notes": {
                  "type": "string",
                  "example": "Updated notes about the habit"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Log updated successfully"
          },
          "404": {
            "description": "Log not found"
          },
          "500": {
            "description": "Failed to update log"
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "summary": "Delete a log entry by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the log entry to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Log deleted successfully"
          },
          "404": {
            "description": "Log not found"
          },
          "500": {
            "description": "Failed to delete log"
          }
        }
      }
    }
  }
}